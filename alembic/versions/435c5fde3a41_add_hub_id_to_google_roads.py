"""Add Hub_id to Google Roads

Revision ID: 435c5fde3a41
Revises: 
Create Date: 2024-10-07 11:51:18.734122

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '435c5fde3a41'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_osun_roads_geometry', table_name='osun_roads')
    op.drop_index('ix_osun_roads_id', table_name='osun_roads')
    op.drop_table('osun_roads')
    op.drop_index('idx_collected_roads_geometry', table_name='collected_roads')
    op.drop_index('ix_collected_roads_id', table_name='collected_roads')
    op.drop_table('collected_roads')
    op.drop_index('idx_lagos_roads_geometry', table_name='lagos_roads')
    op.drop_index('ix_lagos_roads_id', table_name='lagos_roads')
    op.drop_table('lagos_roads')
    op.drop_index('ix_lagos_roads_json_id', table_name='lagos_roads_json')
    op.drop_table('lagos_roads_json')
    op.add_column('google_roads_json', sa.Column('scope_name', sa.String(), nullable=True))
    op.add_column('google_roads_json', sa.Column('hub_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'google_roads_json', 'Hubs_data', ['hub_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'google_roads_json', type_='foreignkey')
    op.drop_column('google_roads_json', 'hub_id')
    op.drop_column('google_roads_json', 'scope_name')
    op.create_table('lagos_roads_json',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('length', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cam_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('camera_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('collection_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('upload_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('upload_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('state_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('state_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geometry', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='lagos_roads_json_pkey')
    )
    op.create_index('ix_lagos_roads_json_id', 'lagos_roads_json', ['id'], unique=False)
    op.create_table('lagos_roads',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('length', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cam_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('camera_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('collection_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('upload_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('upload_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('state_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('state_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geometry', geoalchemy2.types.Geometry(geometry_type='LINESTRING', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='lagos_roads_pkey')
    )
    op.create_index('ix_lagos_roads_id', 'lagos_roads', ['id'], unique=False)
    op.create_index('idx_lagos_roads_geometry', 'lagos_roads', ['geometry'], unique=False)
    op.create_table('collected_roads',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('camera_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('geometry', geoalchemy2.types.Geometry(geometry_type='LINESTRING', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='collected_roads_pkey')
    )
    op.create_index('ix_collected_roads_id', 'collected_roads', ['id'], unique=False)
    op.create_index('idx_collected_roads_geometry', 'collected_roads', ['geometry'], unique=False)
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.create_table('osun_roads',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('length', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cam_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('camera_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('collection_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('upload_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('upload_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('state_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('state_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geometry', geoalchemy2.types.Geometry(geometry_type='LINESTRING', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='osun_roads_pkey')
    )
    op.create_index('ix_osun_roads_id', 'osun_roads', ['id'], unique=False)
    op.create_index('idx_osun_roads_geometry', 'osun_roads', ['geometry'], unique=False)
    # ### end Alembic commands ###
